on:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    paths:
      - 'mule4-batch-demo/**'
    branches: [main, master, develop, 'releases/**']
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:

name: SonarQube-Server
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          ORG_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
          PROJECT_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -f mule4-batch-demo/pom.xml \
          -Dsonar.projectKey=$ORG_NAME-gh_$PROJECT_NAME \
          -Dsonar.projectName=$ORG_NAME-gh_$PROJECT_NAME \
          -Dsonar.projectBaseDir=mule4-batch-demo/